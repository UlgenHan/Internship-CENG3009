-- Start a transaction
BEGIN
  -- Create PlayerStats table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE PlayerStatsTableV (
                PlayerStatsId NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                Goals NUMBER DEFAULT 0,
                Assists NUMBER DEFAULT 0,
                TotalMinutesIn NUMBER DEFAULT 0,
                PassAccuracy NUMBER(5,2),
                Tackles NUMBER DEFAULT 0,
                Interceptions NUMBER DEFAULT 0,
                Clearances NUMBER DEFAULT 0,
                Shots NUMBER DEFAULT 0,
                ShotsOnTarget NUMBER DEFAULT 0,
                DribblesCompleted NUMBER DEFAULT 0,
                AerialDuelsWon NUMBER DEFAULT 0,
                YellowCards NUMBER DEFAULT 0,
                RedCards NUMBER DEFAULT 0,
                FoulsCommitted NUMBER DEFAULT 0,
                FoulsSuffered NUMBER DEFAULT 0,
                Offsides NUMBER DEFAULT 0,
                Saves NUMBER DEFAULT 0,
                CleanSheets NUMBER DEFAULT 0
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating PlayerStatsTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Create Player table
      BEGIN
        EXECUTE IMMEDIATE '
                CREATE TABLE PlayerTable (
                    PlayerId NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                    Name VARCHAR2(50) NOT NULL,
                    Surname VARCHAR2(50) NOT NULL,
                    Age NUMBER,
                    DateOfBirth DATE,
                    Nationality VARCHAR2(50),
                    Position VARCHAR2(50),
                    CurrentClub VARCHAR2(50),
                    Height NUMBER(4,2),
                    Weight NUMBER(4,2),
                    PreferredFoot VARCHAR2(10),
                    PlayerStatsId NUMBER,
                    CONSTRAINT fk_PlayerStatsId_PlayerTable FOREIGN KEY (PlayerStatsId) REFERENCES PlayerStatsTableV(PlayerStatsId)
                )';
      EXCEPTION
        WHEN OTHERS THEN
          DBMS_OUTPUT.PUT_LINE('Error occurred creating PlayerTable: ' ||
                               SQLERRM);
          ROLLBACK;
          RAISE;
      END;

  -- Create InjuriesSuspensions table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE InjuriesSuspensionsTable (
                InjurySuspensionId NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                PlayerId NUMBER,
                Type VARCHAR2(50),
                Description CLOB,
                StartDate DATE,
                EndDate DATE,
                CONSTRAINT fk_InjuriesSuspensions_PlayerId_InjuriesSuspensionsTable FOREIGN KEY (PlayerId) REFERENCES PlayerTable(PlayerId)
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating InjuriesSuspensionsTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Create Referee table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE RefereeTable (
                RefereeId NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                Name VARCHAR2(50) NOT NULL,
                Surname VARCHAR2(50) NOT NULL,
                Nationality VARCHAR2(50),
                ExperienceYears NUMBER,
                Bias NUMBER
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating RefereeTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Create Team table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE TeamTable (
                TeamId NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                Name VARCHAR2(50) NOT NULL,
                Stadium VARCHAR2(50),
                Coach VARCHAR2(50),
                FoundedYear NUMBER,
                City VARCHAR2(50)
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating TeamTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Create TeamStatistics table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE TeamStatisticsTable (
                TeamStatsId NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                TeamId NUMBER,
                SeasonYear VARCHAR2(9),
                GoalsScored NUMBER DEFAULT 0,
                GoalsConceded NUMBER DEFAULT 0,
                Wins NUMBER DEFAULT 0,
                Draws NUMBER DEFAULT 0,
                Losses NUMBER DEFAULT 0,
                HomeWins NUMBER DEFAULT 0,
                AwayWins NUMBER DEFAULT 0,
                RecentForm VARCHAR2(10),
                CONSTRAINT fk_TeamStatistics_TeamId_TeamStatisticsTable FOREIGN KEY (TeamId) REFERENCES TeamTable(TeamId)
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating TeamStatisticsTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Create PlayerTeamLink table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE PlayerTeamLinkTable (
                PlayerTeamLinkId NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                PlayerId NUMBER,
                TeamId NUMBER,
                StartDate DATE,
                EndDate DATE,
                IsLoan VARCHAR2(5) DEFAULT ''FALSE'',
                CONSTRAINT fk_PlayerTeamLink_PlayerId_PlayerTeamLinkTable FOREIGN KEY (PlayerId) REFERENCES PlayerTable(PlayerId),
                CONSTRAINT fk_PlayerTeamLink_TeamId_PlayerTeamLinkTable FOREIGN KEY (TeamId) REFERENCES TeamTable(TeamId)
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating PlayerTeamLinkTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Create Match table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE MatchTable (
                MatchId NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                HomeTeamId NUMBER,
                AwayTeamId NUMBER,
                MatchDate DATE,
                Stadium VARCHAR2(50),
                RefereeId NUMBER,
                WeatherConditions VARCHAR2(50),
                Importance VARCHAR2(20),
                CONSTRAINT fk_Match_HomeTeamId_MatchTable FOREIGN KEY (HomeTeamId) REFERENCES TeamTable(TeamId),
                CONSTRAINT fk_Match_AwayTeamId_MatchTable FOREIGN KEY (AwayTeamId) REFERENCES TeamTable(TeamId),
                CONSTRAINT fk_Match_RefereeId_MatchTable FOREIGN KEY (RefereeId) REFERENCES RefereeTable(RefereeId)
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating MatchTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Create MatchPerformances table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE MatchPerformancesTable (
                MatchPerformanceId NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                PlayerId NUMBER,
                MatchId NUMBER,
                Goals NUMBER DEFAULT 0,
                Assists NUMBER DEFAULT 0,
                MinutesPlayed NUMBER DEFAULT 0,
                PassAccuracy NUMBER(5,2),
                Tackles NUMBER DEFAULT 0,
                Interceptions NUMBER DEFAULT 0,
                Clearances NUMBER DEFAULT 0,
                Shots NUMBER DEFAULT 0,
                ShotsOnTarget NUMBER DEFAULT 0,
                DribblesCompleted NUMBER DEFAULT 0,
                AerialDuelsWon NUMBER DEFAULT 0,
                YellowCards NUMBER DEFAULT 0,
                RedCards NUMBER DEFAULT 0,
                FoulsCommitted NUMBER DEFAULT 0,
                FoulsSuffered NUMBER DEFAULT 0,
                Offsides NUMBER DEFAULT 0,
                Saves NUMBER DEFAULT 0,
                CleanSheets NUMBER DEFAULT 0,
                CONSTRAINT fk_MatchPerformances_PlayerId_MatchPerformancesTable FOREIGN KEY (PlayerId) REFERENCES PlayerTable(PlayerId),
                CONSTRAINT fk_MatchPerformances_MatchId_MatchPerformancesTable FOREIGN KEY (MatchId) REFERENCES MatchTable(MatchId)
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating MatchPerformancesTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Create MatchStatistics table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE MatchStatisticsTable (
                MatchStatsId NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                MatchId NUMBER,
                HomeGoals NUMBER DEFAULT 0,
                AwayGoals NUMBER DEFAULT 0,
                HomePossession NUMBER(5,2),
                AwayPossession NUMBER(5,2),
                HomeShots NUMBER DEFAULT 0,
                AwayShots NUMBER DEFAULT 0,
                HomeShotsOnTarget NUMBER DEFAULT 0,
                AwayShotsOnTarget NUMBER DEFAULT 0,
                HomeFouls NUMBER DEFAULT 0,
                AwayFouls NUMBER DEFAULT 0,
                HomeYellowCards NUMBER DEFAULT 0,
                AwayYellowCards NUMBER DEFAULT 0,
                HomeRedCards NUMBER DEFAULT 0,
                AwayRedCards NUMBER DEFAULT 0,
                CONSTRAINT fk_MatchStatistics_MatchId_MatchStatisticsTable FOREIGN KEY (MatchId) REFERENCES MatchTable(MatchId)
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating MatchStatisticsTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Create PlayerImages table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE PlayerImagesTable (
                PlayerId NUMBER PRIMARY KEY,
                ImageData BLOB
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating PlayerImagesTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Create TeamImages table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE TeamImagesTable (
                TeamId NUMBER PRIMARY KEY,
                ImageData BLOB
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating TeamImagesTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Create CountryFlags table
  BEGIN
    EXECUTE IMMEDIATE '
            CREATE TABLE CountryFlagsTable (
                CountryCode VARCHAR2(3) PRIMARY KEY,
                ImageData BLOB
            )';
  EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error occurred creating CountryFlagsTable: ' ||
                           SQLERRM);
      ROLLBACK;
      RAISE;
  END;

  -- Commit the transaction if all statements succeed
  COMMIT;

EXCEPTION
  -- Rollback the transaction if there's an error
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error occurred: ' || SQLERRM);
    ROLLBACK;
END;
/
