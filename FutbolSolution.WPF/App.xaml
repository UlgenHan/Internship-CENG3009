<Application x:Class="FutbolSolution.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FutbolSolution.WPF"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/assets/icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--Window Brushes Color Scheme-->
            <!--#region Brushes-->
            <SolidColorBrush x:Key="DefaultBackgroundBrush"
                  Color="#16181E"/>


            <SolidColorBrush x:Key="CanvasBrush"
                  Color="#20202C"/>


            <SolidColorBrush x:Key="PrimaryBrush"
                  Color="#00AAEB"/>

            <SolidColorBrush x:Key="SecondaryBrush"
                  Color="White"/>

            <SolidColorBrush x:Key="TertiaryBrush"
                  Color="#E53E46"/>

            <SolidColorBrush x:Key="DimBrush"
                      Color="#3E3E46"/>
            <!--#endregion-->

            <!--Top Navigation Style-->
            <Style x:Key="TopNavigationStyle"
TargetType="{x:Type RadioButton}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource SecondaryBrush}"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid
                         Background="{TemplateBinding Background}">
                                <ContentPresenter
                             x:Name="content"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--Highlight Text when mouse is over menu-->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                </Trigger>

                                <!--Highlight Text when menu is selected-->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Shadow Effects-->
            <DropShadowBitmapEffect
         x:Key="BottomShadowEffect"
         ShadowDepth="3"
         Softness=".2"
         Direction="-59"
         Color="#0c0d12"/>
            <DropShadowBitmapEffect
         x:Key="RightShadowEffect"
         ShadowDepth="3"
         Softness=".2"
         Direction="0"
         Color="#0c0d12"/>

            <!--Card Linear Gradient Effect-->
            <LinearGradientBrush
         x:Key="GradientBrush"
         StartPoint="0,0"
         EndPoint="0,1">
                <GradientStop
             Color="Transparent"
             Offset="0.0"/>
                <GradientStop
             Color="#00AAEB"
             Offset="2"/>
            </LinearGradientBrush>



            <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
            <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
            <Style TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
                <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Background}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid x:Name="TemplateRoot">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Determinate"/>
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                    <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                    <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                    <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                                </PointAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                               CornerRadius="3"/>
                                <Rectangle x:Name="PART_Track"/>
                                <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                    <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"
                                      RadiusX="3"
                                      RadiusY="3"/>
                                    <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5"
                                      RadiusX="3"
                                      RadiusY="3">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsIndeterminate" Value="true">
                                    <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard>
                            <!--to add slowing effect while reaching 100%-->
                            <Storyboard DecelerationRatio="1">
                                <DoubleAnimation
                           Storyboard.TargetProperty="Value"
                           From="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="PrimaryButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#007bff" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Padding" Value="10,5" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="BorderBrush" Value="#007bff" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="10"></Setter>
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                           BorderBrush="{TemplateBinding BorderBrush}" 
                           BorderThickness="{TemplateBinding BorderThickness}"
                           CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
